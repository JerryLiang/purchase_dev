<?phpclass Product_data extends MY_Controller{    public function __construct()    {        parent::__construct();        $this->load->model('product_model');        $this->load->model('purchase_user_model','product_user',false,'user');        $this->load->model('product_line_model','product_line',false,'product');        $this->load->model('supplier_buyer_model','supplier_buyer_model',false,'supplier');        $this->load->model('product_update_log_model','product_update_log',false,'product');        $this->load->model('Product_mod_audit_model','product_mod');    }    public function update_product_save( $data_arr ){//        $data_json = $this->input->get_post('data');//        if(empty($data_json)){//            $this->error_json('数据不能为空');//        }        //$data_arr = json_decode($data_json,true);        $sku_list = $data_arr['sku_list'];        $new_supplier_price = $data_arr['new_supplier_price']; //未税单价        $new_ticketed_point = $data_arr['new_ticketed_point']; //开票税点        $new_supplier_code = $data_arr['new_supplier_code']; //供应商编码        $new_supplier_name = $data_arr['new_supplier_name']; //供应商名称        $new_product_link = $data_arr['new_product_link']; //采购链接        $is_sample = $data_arr['is_sample']; //是否拿样        $supply_status=$data_arr['supply_status']; //货源状态        $create_remark=$data_arr['create_remark'];//申请备注        /*        $sku_list = $this->input->get_post('sku_list');        $new_supplier_price = $_REQUEST['new_supplier_price']; //未税单价        $new_ticketed_point = $_REQUEST['new_ticketed_point']; //开票税点        $new_supplier_code = $_REQUEST['new_supplier_code']; //供应商编码        $new_supplier_name = $_REQUEST['new_supplier_name']; //供应商名称        $new_product_link = $_REQUEST['new_product_link']; //采购链接        $is_sample = $_REQUEST['is_sample']; //是否拿样        $supply_status=$_REQUEST['supply_status']; //货源状态        $create_remark=$_REQUEST['create_remark'];//申请备注        */        //转化数组        $sku_product = explode(',', $sku_list);        if (empty($sku_product) && !is_array($sku_product)) {            $this->error_json('传入参数不合法');        }        $this->load->model('supplier/supplier_model');        $data_sku=$data_error=[];        $audit_status=$audit_level='';        try {            foreach ($sku_product as $sku) {                if (empty($new_supplier_code[$sku])) {                    return False;                }                if (empty($new_supplier_name[$sku])) {                    return False;                }                if (empty($new_product_link[$sku])) {                    return False;                }                if ($new_ticketed_point[$sku] == '') {                    return False;                }                if ($is_sample[$sku] == '') {                    return False;                }                if ($supply_status[$sku] == '') {                                        return False;                }                //根据SKU查找产品数据                $product_info = $this->product_model->get_product_info($sku);                if (empty($product_info)) {                    return False;                }                // 验证供应商是否存在                $supplier_info = $this->supplier_model->get_supplier_info($new_supplier_code[$sku], false);                if (empty($supplier_info)) {                    return False;                }                //根据SKU查找产品修改记录                $product_log_info = $this->product_update_log->get_product_log_info($sku);                if (in_array($product_log_info['audit_status'], [PRODUCT_UPDATE_LIST_AUDITED, PRODUCT_UPDATE_LIST_QUALITY_AUDIT, PRODUCT_UPDATE_LIST_FINANCE])) {                    return False;                }                //判断是否审核 采购链接的变更：不需审核 货源状态的变更：不需审核  其他不修改                if ($product_info['purchase_price'] == $new_supplier_price[$sku]                    && $product_info['supplier_code'] == $new_supplier_code[$sku]                    && $product_info['ticketed_point'] == $new_ticketed_point[$sku]                    && $product_info['is_sample'] == $is_sample[$sku]) {                    if ($product_info['product_cn_link'] != $new_product_link[$sku] || $is_sample[$sku] != $product_info['is_sample']) {                        $audit_status = PRODUCT_UPDATE_LIST_AUDIT_PASS;                        $audit_level = '3,';                    }                }                //供应商名称的修改 只需经过采购部审核                if ($product_info['supplier_code'] != $new_supplier_code[$sku]) {                    $audit_status = PRODUCT_UPDATE_LIST_AUDITED;                    $audit_level .= '1,';                }                //是否拿样                if ($product_info['is_sample'] != $is_sample[$sku]) {                    if ($is_sample[$sku] == '1') { //是，需经过采购部、品控部2级审核                        $audit_status = PRODUCT_UPDATE_LIST_AUDITED;                        $audit_level .= '1,2,';                    } else {                        $audit_status = PRODUCT_UPDATE_LIST_AUDITED;                        $audit_level .= '1,';                    }                }                // 未税单价的修改                if (bccomp($product_info['purchase_price'], $new_supplier_price[$sku], 3) != 0) {                    if (bccomp($product_info['purchase_price'], $new_supplier_price[$sku], 3) > 0) {  //降低：只需经过采购部审核                        $audit_status = PRODUCT_UPDATE_LIST_AUDITED;                        $audit_level .= '1,';                    } else { // 增加：需经过采购部、财务部2级审核                        $audit_status = PRODUCT_UPDATE_LIST_AUDITED;                        $audit_level .= '1,5,';                    }                }                //开票点修改                if (bccomp($product_info['ticketed_point'], $new_ticketed_point[$sku], 3) != 0) {                    if (bccomp($product_info['ticketed_point'], $new_ticketed_point[$sku], 3) > 0) {  //降低：只需经过采购部审核                        $audit_status = PRODUCT_UPDATE_LIST_AUDITED;                        $audit_level .= '1,';                    } else { // 增加：需经过采购部、财务部2级审核                        $audit_status = PRODUCT_UPDATE_LIST_AUDITED;                        $audit_level .= '1,5,';                    }                }                //转化数据数据                $audit_level_list = explode(',', $audit_level);                $audit_level_json = json_encode(array_filter(array_unique($audit_level_list)));                $params = [                    'sku' => $sku,                    'product_name' => $product_info['product_name'],                    'product_line_name' => $this->product_line->get_product_line_name($product_info['product_line_id']),                    'old_supplier_price' => $product_info['purchase_price'],                    'new_supplier_price' => $new_supplier_price[$sku],                    'old_supplier_code' => $product_info['supplier_code'],                    'new_supplier_code' => $new_supplier_code[$sku],                    'old_supplier_name' => $product_info['supplier_name'],                    'new_supplier_name' => $supplier_info['supplier_name'],                    'old_ticketed_point' => $product_info['ticketed_point'],                    'new_ticketed_point' => $new_ticketed_point[$sku],                    'old_product_link' => $product_info['product_cn_link'],                    'new_product_link' => $new_product_link[$sku],                    'create_user_id' => !empty(getActiveUserId()) ? getActiveUserId() : '',                    'create_user_name' => !empty(getActiveUserName()) ? getActiveUserName() : '',                    'audit_status' => !empty($audit_status) ? $audit_status : PRODUCT_UPDATE_LIST_AUDIT_PASS,                    'create_remark' => $create_remark[$sku],                    'is_sample' => $is_sample[$sku],                    'audit_level' => $audit_level_json,                ];                $audit_arr = [                    'audit_status' => $audit_status,                ];                if (empty($product_log_info) or $product_log_info['audit_status'] == PRODUCT_UPDATE_LIST_AUDIT_PASS or $product_log_info['audit_status'] == PRODUCT_UPDATE_LIST_REJECT) {                    $params['create_time'] = date('Y-m-d H:i:s');                    $result = $this->product_update_log->save_product_log_info($params);                    if ($product_info['supply_status'] == $supply_status[$sku]) {                        $this->product_model->update_one($sku, $audit_arr);                    } else {                        $audit_arr['supply_status'] = $supply_status[$sku];                        $this->product_model->update_one($sku, $audit_arr);                    }                } else {                    $result = $this->product_update_log->update_product_log_one($sku, $params);                }                if ($result) {                    $data_sku[] = $sku;                } else {                    $data_error[] = $sku;                    return False;                }            }            $msg = '';            if (!empty($data_sku)) {                return True;            }            if (!empty($data_error)) {                return False;            }        }catch ( Exception $exp ) {        }    }    public function get_olddata_price()    {        $result = $this->product_model->getdata();        foreach ($result as $key => $value) {            $sku_list = $value['sku'];            $product = $this->product_model->getproduct($sku_list);            $sendArr = array();            $sendArr['sku_list'] = $sku_list;            if( !empty($value['newprice'])) {                $sendArr['new_supplier_price'][$sku_list] = !empty($value['newprice']);            }else{                $sendArr['new_supplier_price'][$sku_list] = $product['purchase_price'];            }            $sendArr['new_ticketed_point'][$sku_list] = $product['ticketed_point'];            $sendArr['new_supplier_code'][$sku_list] = !empty($value['newsupplier'])? $value['newsupplier']:$product['supplier_code'];            if( !empty($product['supplier_name']) ) {                $sendArr['new_supplier_name'][$sku_list] = $product['supplier_name'];            }else{                $purcha_name =  $this->product_model->getProductSupplier($value['newsupplier']);                $sendArr['new_supplier_name'][$sku_list] = $purcha_name['supplier_name'];            }            $sendArr['new_product_link'][$sku_list] = $product['product_cn_link'];            $sendArr['is_sample'][$sku_list] = $product['is_sample'];            $sendArr['supply_status'][$sku_list] = $product['supply_status'];            $sendArr['create_remark'][$sku_list] = "程序修改";            $res = $this->update_product_save($sendArr);            if( True == $res ) {                try {                    echo "sku=" . $value['sku'] . "--";                    $logs = $this->product_model->getproductlog($value['sku'], $value['newprice'], 1);                    $this->product_mod->product_audit($logs['id'], 1, "7/5代码批量修改");                    $logs = $this->product_model->getproductlog($value['sku'], $value['newprice'], 2);                    $this->product_mod->product_audit($logs['id'], 1, "7/5代码批量修改");                    $logs = $this->product_model->getproductlog($value['sku'], $value['newprice'], 5);                    $this->product_mod->product_audit($logs['id'], 1, "7/5代码批量修改");                }catch ( Exception $exp ) {                    echo $value['sku']."|".$exp->getMessage();                }            }else{                echo "fsfsdf";            }        }    }}