<?php/** * User: roy * Time: 17:48 */class Image{    /**     * 上传公告附件 单个或者多个     * @author roy     * @return array     */    public function upload_attachments()    {        $voucher_path = [];        if (!empty ($_FILES ['file_path_data'] ['name'])) {            $img_type_arr  = ['png', 'gif', 'jpg', 'jpeg'];            $file_type_arr = [                'zip', 'rar', 'pdf', 'doc', 'docx', 'doc', 'pptx', 'ppt', 'xlsx', 'xls', 'gz', 'png', 'gif', 'jpg', 'jpeg'            ];            if (is_array($_FILES ['file_path_data'] ['name'])) {                foreach ($_FILES ['file_path_data'] ['name'] as $k => $value) {                    $tmp_file   = $_FILES ['file_path_data'] ['tmp_name'][$k];                    $file_types = explode(".", $value);                    $file_type  = $file_types [count($file_types) - 1];                    if (!in_array(strtolower($file_type), $file_type_arr)) {                        $this->data['errorMess'] = "'$value'文件格式错误,提交失败！";                        http_response($this->data);                    }                    /*设置上传路径*/                    $savePath = APPPATH . 'picture/announcement/';                    if (!file_exists($savePath)) {                        mkdir($savePath, 0777, true);                    }                    /*是否上传成功*/                    if (!copy($tmp_file, $savePath . $value)) {                        $this->data['errorMess'] = "'$value'上传失败！";                        http_response($this->data);                    }                    if (in_array(strtolower($file_type), $img_type_arr)) {                        /************ 图片生成缩略图 start *************/                        $url    = SUPR_DAL_API_HOST.'/system/image/image_resize';                        $result = self::uploadFile($url, APPPATH . 'picture/announcement/' . $value, []);                        /************* 图片生成缩略图 end ************/                    }                    $voucher_path[] = APPPATH . 'picture/announcement/' . $value;                }            } else {                //单个附件处理                $tmp_file  = $_FILES ['file_path_data'] ['tmp_name'];                $file_name = $_FILES ['file_path_data'] ['name'];                $file_types = explode(".", $file_name);                $file_type  = $file_types [count($file_types) - 1];                if (!in_array(strtolower($file_type), $file_type_arr)) {                    $this->data['errorMess'] = '文件格式错误,提交失败！';                    http_response($this->data);                }                /*设置上传路径*/                $savePath = APPPATH . 'picture/announcement/';                if (!file_exists($savePath)) {                    mkdir($savePath, 0755, true);                }                /*是否上传成功*/                if (!copy($tmp_file, $savePath . $file_name)) {                    $this->data['errorMess'] = '上传失败！';                    http_response($this->data);                }                $voucher_path[] = APPPATH . 'picture/announcement/' . $file_name;                if (in_array(strtolower($file_type), $img_type_arr)) {                    /************ 图片生成缩略图 start *************/                    $url    = SUPR_DAL_API_HOST.'/system/image/image_resize';                    $result = self::uploadFile($url, APPPATH . 'picture/announcement/' . $file_name, []);                    /************* 图片生成缩略图 end ************/                }            }        }        http_response($voucher_path);        return $voucher_path;    }    /**     * @param string $url 请求地址     * @param string $filePath 上传文件的绝对路径     * @param array $postParam 数据     * @return array|bool|string     */    public static function uploadFile($url, $filePath, $postParam)    {        if (version_compare(phpversion(), '5.5.0') >= 0 && class_exists('CURLFile')) {            $file = new CURLFile(realpath($filePath));        } else {            $file = '@' . $filePath;        }        $data = ["file" => $file];        $param = array_merge($postParam, $data);        $ch    = curl_init($url);        curl_setopt($ch, CURLOPT_HEADER, 0);        curl_setopt($ch, CURLOPT_TIMEOUT, 5);        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);        curl_setopt($ch, CURLOPT_POST, true);        curl_setopt($ch, CURLOPT_POSTFIELDS, $param);        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);        curl_setopt($ch, CURLOPT_MAXREDIRS, 3);        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);        $response = curl_exec($ch);        if (curl_errno($ch) != 0)            return curl_error($ch);        curl_close($ch);        if (!$response)            return false;        return $response;    }}